apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "com.restaurantapp"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "${applicationId}.runner.RxAndroidJUnitRunner"

        project.ext.set("archivesBaseName", "restaurantapp_v" + defaultConfig.versionName + "(" + defaultConfig.versionCode + ")")

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        // production
        release {
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        // staging
        debug {
            debuggable true
            versionNameSuffix " debug"
        }
    }
    sourceSets {
        def commonTestDir = 'src/commonTest/java'
        test {
            java.srcDir commonTestDir
        }
        androidTest {
            java.srcDir commonTestDir
        }
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

repositories {
    mavenCentral()
}

dependencies {
    final SUPPORT_LIBRARY_VERSION = '26.1.0'
    final MOCKITO_VERSION = '2.6.2'
    final HAMCREST_VERSION = '1.3'
    final RETROFIT_VERSION = '2.3.0'
    final BUTTERKNIFE_VERSION = '8.8.1'
    final GLIDE_VERSION = '4.0.0'
    final DAGGER_VERSION = '2.11'
    final ESPRESSO_VERSION = '2.2.1'
    final RUNNER_VERSION = '0.4'
    final RXJAVA_VERSION = '2.1.7'
    final ROOM_VERSION = '1.0.0'
    final PLAY_SERVICES_VERSION = '11.8.0'

    def daggerCompiler = "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    def jUnit = "junit:junit:4.12"
    def mockito = "org.mockito:mockito-core:$MOCKITO_VERSION"

    // android support libraries
    implementation "com.android.support:support-v4:$SUPPORT_LIBRARY_VERSION"
    implementation "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
    implementation "com.android.support:design:$SUPPORT_LIBRARY_VERSION"
    implementation "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION"
    implementation "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"

    // google play services
    implementation "com.google.android.gms:play-services-places:$PLAY_SERVICES_VERSION"
    implementation "com.google.android.gms:play-services-maps:$PLAY_SERVICES_VERSION"
    implementation "com.google.android.gms:play-services-location:$PLAY_SERVICES_VERSION"

    // network
    implementation "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.3.0'

    // rx
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation "io.reactivex.rxjava2:rxjava:$RXJAVA_VERSION"

    // room
    implementation "android.arch.persistence.room:runtime:$ROOM_VERSION"
    implementation "android.arch.persistence.room:rxjava2:$ROOM_VERSION"
    annotationProcessor "android.arch.persistence.room:compiler:$ROOM_VERSION"

    // room testing support
    androidTestImplementation "android.arch.core:core-testing:$ROOM_VERSION"

    // media/image
    implementation "com.github.bumptech.glide:glide:$GLIDE_VERSION"
    annotationProcessor "com.github.bumptech.glide:compiler:$GLIDE_VERSION"

    // view binding
    implementation "com.jakewharton:butterknife:$BUTTERKNIFE_VERSION"
    annotationProcessor "com.jakewharton:butterknife-compiler:$BUTTERKNIFE_VERSION"

    // injection
    implementation  "com.google.dagger:dagger:$DAGGER_VERSION"
    compileOnly 'org.glassfish:javax.annotation:10.0-b28' //Required by Dagger2
    annotationProcessor daggerCompiler
    testAnnotationProcessor daggerCompiler
    androidTestAnnotationProcessor daggerCompiler

    // Instrumentation test dependencies
    androidTestImplementation jUnit
    androidTestImplementation mockito
    androidTestImplementation "org.mockito:mockito-android:$MOCKITO_VERSION"
    androidTestImplementation "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"
    androidTestImplementation("com.android.support.test.espresso:espresso-contrib:$ESPRESSO_VERSION") {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$ESPRESSO_VERSION"
    androidTestImplementation "com.android.support.test:runner:$RUNNER_VERSION"
    androidTestImplementation "com.android.support.test:rules:$RUNNER_VERSION"

    // unit test dependencies
    testImplementation jUnit
    testImplementation mockito
    testImplementation "org.hamcrest:hamcrest-core:$HAMCREST_VERSION"
    testImplementation "org.hamcrest:hamcrest-library:$HAMCREST_VERSION"
    testImplementation "org.hamcrest:hamcrest-integration:$HAMCREST_VERSION"
    testImplementation 'org.robolectric:robolectric:3.3.2'
}

// Log out test results to console
tasks.matching {it instanceof Test}.all {
    testLogging.events = ["failed", "passed", "skipped"]
}
